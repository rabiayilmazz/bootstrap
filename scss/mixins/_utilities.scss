// Utility generator
// Used to generate utilities & print utilities
@mixin generate-utility($utility, $infix, $isRfsMediaQuery: false) {
  $values: map-get($utility, values);

  // If the values are a list or string, convert it into a map
  @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
    $values: zip($values, $values);
  }

  @each $key, $value in $values {
    $properties: map-get($utility, property);

    // Multiple properties are possible, for example with vertical or horizontal margins or paddings
    @if type-of($properties) == "string" {
      $properties: append((), $properties);
    }

    // Use custom class if present
    $property-class: map-get($utility, class);
    $property-class: if($property-class, $property-class, nth($properties, 1));

    // Don't prefix if value key is null (eg. with shadow class)
    $property-class-modifier: if($key, "-" + $key, "");

    @if $isRfsMediaQuery and map-get($utility, rfs) {
      $val: rfs-value($value);
      $fluidVal: rfs-fluid-value($value);
      @if $val != $fluidVal {
        .#{$property-class + $infix + $property-class-modifier} {
          @each $property in $properties {
            // stylelint-disable-next-line declaration-no-important
            #{$property}: #{$val} !important;
          }
        }
      }
    }
    @else {
      .#{$property-class + $infix + $property-class-modifier} {
        @each $property in $properties {
          // stylelint-disable-next-line declaration-no-important
          #{$property}: #{if(map-get($utility, rfs), rfs-fluid-value($value), $value)} !important;
        }
      }
    }
  }
}
